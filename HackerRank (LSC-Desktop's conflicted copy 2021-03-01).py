# """

# """
# def reverse_words_order_and_swap_cases(s):
#     # Write your code here
#     s =s.swapcase()
#     s = s.split()
#     s = list(reversed(s))
#     return " ".join(s)
    
# s = "aWESOME is cODING"    
# reverse_words_order_and_swap_cases(s)
##----------------------------------------------------------------------------------
#!/bin/python3

# import math
# import os
# import random
# import re
# import sys

# ##First
# class Multiset:
#     def __init__(self):
#         self.mset = list()

#     def add(self, val):
#         # Adds one occurrence of val from the multiset, if any
    #     self.mset.append(val)

    # def remove(self, val):
    #     # Removes one occurrence of val from the multiset, if any
    #     if val in self.mset:
    #         self.mset.remove(val)
    #     else:
    #         return False

    # def __contains__(self, val):
    #     # Returns True when val is in the multiset, else returns False
    #     if val in self.mset:
    #         return True
    #     else:
    #         return False

    # def __len__(self):
    #     # Returns the number of elements in the multiset
    #     return len(self.mset)



# ##Second
# class Multiset:
#     def __init__(self):
#         self.mset = list()

#     def add(self, val):
#         # Adds one occurrence of val from the multiset, if any
#         self.mset.append(val)

#     def remove(self, val):
#         # Removes one occurrence of val from the multiset, if any
#         return self.mset.remove(val)if val in self.mset else False

#     def __contains__(self, val):
#         # Returns True when val is in the multiset, else returns False
#         return bool(val in self.mset)

#     def __len__(self):
#         # Returns the number of elements in the multiset
#         return len(self.mset)


##----------------------------------------------------------------------------------
# def getMinCost(c, r):
#     # Write your code here
#     fin = 0
#     c.sort()
#     r.sort()
#     for i in range(len(c)):
#         fin += abs(r[i] - c[i])
#         # if i > r[0]:
#         #     fin += c[i] - r[i]
#         # else:
#         #     fin += r[i] - c[i]
#     return fin
            
            




# crew = [1,3,5]
# repair = [3,5,7]


# getMinCost(crew, repair)
##----------------------------------------------------------------------------------
# def filledOrders(order, k):
#     # Write your code here
#     x  = 0
#     order.sort()
#     for i in range(len(order)):
#         if order[i] <= k:
#             x += 1
#             k -= order[i]
#     return x
##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

        
##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

        
##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

        
##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

##----------------------------------------------------------------------------------

